- Class: meta
  Course: DataScienceAndR
  Lesson: RDataMining-03-Association-Rule
  Author: Wush Wu
  Type: Standard
  Organization: Taiwan R User Group
  Version: 1.0
- Class: text
  Output: 這門課程會跟同學介紹在R 中常用的Association Rule算法。
- Class: cmd_question
  Output: 首先請同學安裝arules 這個套件。
  CorrectAnswer: check_then_install("arules", "1.3.0")
  AnswerTests: test_package_version("arules", "1.3.0")
  Hint: check_then_install("arules", "1.3.0")
- Class: cmd_question
  Output: 載入arules套件。
  CorrectAnswer: library(arules)
  AnswerTests: test_search_path("arules")
  Hint: library(arules)
- Class: cmd_question
  Output: 接著，我們查一查arules有沒有vignette。
  CorrectAnswer: vignette(package = "arules")
  AnswerTests: omnitest('vignette(package = "arules")')
  Hint: vignette(package = "arules")
- Class: cmd_question
  Output: 有一篇名叫arules的vignette。麻煩同學先打開它。
  CorrectAnswer: vignette("arules", package = "arules")
  AnswerTests: omnitest('vignette("arules", package = "arules")')
  Hint: vignette("arules", package = "arules")
- Class: text
  Output: 這篇文章仔細的介紹arules套件所提供的演算法、參數，以及提供了範例。 如果想要深入了解apriori演算法的同學，可以花點時間細讀這份文件。
- Class: cmd_question
  Output: 讓我們先試試看arules提供的apriori函數。請同學先打開apriori函數的說明頁面。
  CorrectAnswer: ?apriori
  AnswerTests: any_of_exprs("?apriori", "help(apriori)", 'help("apriori")')
  Hint: ?apriori
- Class: mult_question
  Output: 請問下列哪一個「不是」apriori函數的參數？請參考說明文件作答。
  AnswerChoices: data;parameter;appearance;control;confidence
  CorrectAnswer: confidence
  AnswerTests: omnitest(correctVal = "confidence")
- Class: text
  Output: apriori的data參數必須要是transactions型態。所以我們要先探索何謂 transactions型態的物件
- Class: cmd_question
  Output: 請同學輸入：`?"trandactions-class"`來打開transactions的說明文件。這裡因為文字中包含 `-`這個符號，所以要用雙引號。
  CorrectAnswer: ?"trandactions-class"
  AnswerTests: omnitest('?"trandactions-class"')
  Hint: ?"trandactions-class"
- Class: mult_question
  Output: 請問transactions物件預設「不能」從哪些物件轉換而來？請參考Details章節作答。
  AnswerChoices: list;matrix;data.frames;numeric vector
  CorrectAnswer: numeric vector
  AnswerTests: omnitest(correctVal = "numeric vector")
- Class: text
  Output: Association Rules要挖掘的，就是透過探索哪些物品(Item)會共同出現在哪些交易(Transaction)中， 而衍生出來的技術。在R
    裡面，我們要透過list、matrix或data.frame來告訴R 這些物品和交易的資訊。
- Class: cmd_question
  Output: 舉例來說，如果我們有三種物品：`c("a", "b", "c")`。而第一筆交易有`c("a", "b", "c")`， 第二筆交易有`c("a",
    "b")`，那我們就可以建立以下的list： `record_list <- list(c("a", "b", "c"), c("a", "b"))` 請同學試試看。
  CorrectAnswer: record_list <- list(c("a", "b", "c"), c("a", "b"))
  AnswerTests: omnitest('record_list <- list(c("a", "b", "c"), c("a", "b"))')
  Hint: record_list <- list(c("a", "b", "c"), c("a", "b"))
- Class: cmd_question
  Output: 有了`record_list`之後，我們可以利用`as`來把`record_list`轉換成transactions物件。 請同學輸入：`record
    <- as(record_list, "transactions")`
  CorrectAnswer: record <- as(record_list, "transactions")
  AnswerTests: omnitest('record <- as(record_list, "transactions")')
  Hint: record <- as(record_list, "transactions")
- Class: cmd_question
  Output: 我們來看看record的結果。請同學輸入：`record`
  CorrectAnswer: record
  AnswerTests: omnitest('record')
  Hint: record
- Class: text
  Output: 我們看到了2 筆交易，因為`length(record_list)`為2 。而且我們看到了3 個物品，它們 是：`c("a", "b", "c")`。
- Class: cmd_question
  Output: R 也提供了`summary`來更仔細的檢視`record`。請同學輸入：`summary(record)`
  CorrectAnswer: summary(record)
  AnswerTests: omnitest('summary(record)')
  Hint: summary(record)
- Class: text
  Output: 我們看到了更多更深入的資訊，例如出現最多次的物品、交易中包含的物品類別的分佈
- Class: cmd_question
  Output: 接著，讓我們看一個真實的範例：Adult資料。請同學輸入：`data(Adult)`
  CorrectAnswer: data(Adult)
  AnswerTests: omnitest("data(Adult)")
  Hint: data(Adult)
- Class: cmd_question
  Output: 也請同學輸入：`?Adult`來看一看arules套件針對這個範例資料的說明。 有興趣的同學可以深入閱讀關於這份資料的說明。
  CorrectAnswer: ?Adult
  AnswerTests: any_of_exprs("?Adult", "help(Adult)", 'help("Adult")')
  Hint: ?Adult
- Class: cmd_question
  Output: arules套件已經把Adult資料轉換成transactions物件了。請同學用`class(Adult)`來確認。
  CorrectAnswer: class(Adult)
  AnswerTests: omnitest("class(Adult)", "transactions")
  Hint: class(Adult)

