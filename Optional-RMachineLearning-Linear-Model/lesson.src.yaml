- Class: meta
  Course: DataScienceAndR
  Lesson: Optional-RMachineLearning-Linear-Model
  Author: Wush Wu
  Type: Standard
  Organization: Taiwan R User Group
  Version: 2.3.1.2

- Class: text
  Output: |
    這個課程跟同學介紹R建立線性模型與廣義線性模型的功能。

- Class: text
  Output: |
    在R中要建立線性模型，首先要把資料給整理好。舉例來說，先把資料整理成data.frame是很常見的作法。

- Class: cmd_question
  Output: |
    舉例來說，請同學輸入：`cars`看一看這個車速與煞車距離的資料集。

- Class: text
  Output: |
    我們想要研究車速（speed）與煞車後的滑行距離（dist）之間的關係。而這些資料，
    都已經放到cars資料集合之中了。
  
- Class: text
  Output: |
    cars的資料中，每一欄都代表一個面向的數據。舉例來說，第一欄位都是車速、 第二欄位都是煞車
    的滑行距離。

- Class: text
  Output: |
    cars的每一列，則代表一筆觀測資料。舉例來說，第一列的資料顯示，第一筆觀測數據，車速是4 mph，
    而煞車後的滑行距離則是2 ft。這些配對關係是很重要，第一列的車速就是配對到第一列的煞車滑行距離。

- Class: cmd_question
  Output: |
    在建立模型之前，建議先盡可能的看看資料的長相。請同學先輸入`skip()`
    自動檢查有無安裝ggplot2套件。
  CorrectAnswer: check_then_install("ggplot2", "2.0.0")
  AnswerTests: test_package_version("ggplot2", "2.0.0")

- Class: cmd_question
  Output: 接著，請載入ggplot2套件
  CorrectAnswer: library(ggplot2)
  AnswerTests: test_search_path("ggplot2")

- Class: cmd_question
  Output: |
    請輸入：`g <- ggplot(cars, aes(x = speed, y = dist)) + geom_point()`來建立
    ggplot2的繪圖物件，並且把結果寫入到變數g

- Class: cmd_question
  Output: |
    請輸入`print(g)`看看上一題答案的結果

- Class: cmd_question
  Output: |
    由於兩筆數據間有呈現線性關係的趨勢，所以用線性模型應該是合理的選擇。
    請同學輸入：`?lm`看看建立線性模型的說明文件

- Class: cmd_question
  Output: |
    `lm`的第一個參數是`formula`，是R 中常常用來描述數據間關係的語法。
    `data`代表的是R 要取得資料的data.frame。請同學輸入：
    `m <- lm(dist ~ speed, cars)`，將`lm`的輸出寫入`m`
  CorrectAnswer: m <- lm(dist ~ speed, cars)

- Class: text
  Output: |
    上一個答案中的`dist ~ speed`是R 的formula物件。formula物件的目的
    是描述數據間的關係。`~`左方的名稱，是應變變數，也是我們感興趣的
    變數名稱；`~`右方的名稱，是獨立變數，我們將拿獨立變數來解釋應變變數
    的變化。

- Class: cmd_question
  Output: |
    請同學輸入`m`看一看結果

- Class: cmd_question
  Output: |
    請同學輸入`class(m)`看看`m`的型態
  CorrectAnswer: class(m)

- Class: text
  Output: |
    R 中計算而得的數據模型，通常都會有自己的型態。例如`lm`產生的線性模型物件，
    型態就是："lm"(linear model)。

- Class: cmd_question
  Output: |
    請同學輸入：`mode(m)`，看看m真正的型態

- Class: text
  Output: |
    `lm`輸出的物件，本質上只是一個帶有名字的list。在說明文件中，副標題為Value段落，
    解釋了該list中每個元素的名字與意義。

- Class: cmd_question
  Output: 請同學輸入：`coef(m)`

- Class: cmd_question
  Output: |
    線性模型所學到的參數，都紀錄在`coef(m)`的輸出中。我們可以看到一個帶有名字的
    數值向量（numeric vector）。這裡的Intercept，代表的就是迴歸線的截距，也就是
    當車速為0 時的煞車滑動距離。而speed，則代表speed變數的參數。也就是說，如果
    我們知道車速為x 時，線性模型預測滑行的距離為： -17.58 + 3.93 * x

- Class: cmd_question
  Output: |
    我們可以使用：`g + stat_smooth(method = "lm", formula = y ~ x)`來畫出計算出的
    迴歸線。

- Class: text
  Output: |
    在`geom_smooth`中，method參數代表我們要建立模型的指令，也就是`lm`。只是這裡要給字串
    （要用雙引號包覆lm）。而`formula = y ~ x`代表這條線所描述的關係。圖形中的灰色區域，
    代表預測值的95%信賴區間。

- Class: cmd_question 
  Output: |
    `summary(m)`則鉅細靡遺的描述線性模型的性質。請同學試試看。
    
- Class: text
  Output: |
    Residuals區以敘述統計描述模型誤差的分佈。所謂的Residuals，就是在學習的資料（也就是`lm`的參數
    data所對應到的data.frame，例：cars）中，觀測值與預測值得差距。

- Class: text
  Output: |
    Coefficients則顯示的各參數檢定結果(虛無假設為對應的參數值為0)，星號表示顯著，即代表有明顯正顯示該參數不為0。

- Class: text
  Output: |
    最下面則顯示各種重要的統計指標：Residual Standard error代表的是模型誤差的變異數；

- Class: text
  Output: |
    R-squared 則類似相關係數的平方，描述資料接不接近線性模型。如果R-squared 很靠近一，表示
    線性模型很接近資料；如果靠近0，則代表模型和資料不像。
    
- Class: text
  Output: |
    最後的F-statistic則用來檢定此模型和只有平均數的模型相比，是不是有明顯的差異。

- Class: cmd_question
  Output: |
    接著，同學如果要預測車速為20的時候，煞車滑行距離為多少時，
    可以輸入：`predict(m, data.frame(speed = 20))`

- Class: cmd_question
  Output: |
    R 也可以輸出預測的標準差。請同學輸入：`predict(m, data.frame(speed = 20), se.fit = TRUE)`

- Class: cmd_question
  Output: |
    R 也可以輸出預測的信賴區間。請同學輸入：`predict(m, data.frame(speed = 20), interval = "predict")`

